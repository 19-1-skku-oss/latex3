% \iffalse meta-comment
%
%% File: l3draw-points.dtx Copyright(C) 2018 The LaTeX3 Project
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    http://www.latex-project.org/lppl.txt
%
% This file is part of the "l3trial bundle" (The Work in LPPL)
% and all files in that bundle must be distributed together.
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/latex3/latex3
%
% for those people who are interested.
%
%<*driver|package>
\RequirePackage{expl3}
%</driver|package>
%<*driver>
\documentclass[full]{l3doc}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \title{^^A
%   The \pkg{l3draw-points} package\\ Calculating points^^A
% }
%
% \author{^^A
%  The \LaTeX3 Project\thanks
%    {^^A
%      E-mail:
%        \href{mailto:latex-team@latex-project.org}
%          {latex-team@latex-project.org}^^A
%    }^^A
% }
%
% \date{Released 2018/02/05}
%
% \maketitle
%
% \begin{implementation}
%
% \section{\pkg{l3draw-points} implementation}
%
%    \begin{macrocode}
%<*initex|package>
%    \end{macrocode}
%
%    \begin{macrocode}
%<@@=draw>
%    \end{macrocode}
%
% \subsection{Support functions}
%
% \begin{macro}{\@@_process_point:nn}
%   Execute whatever code is passed to extract the $x$ and $y$ co-ordinates.
%   The second argument here should itself absorb two arguments.
%    \begin{macrocode}
\cs_new_protected:Npn \@@_process_point:nn #1#2
  {
    \use:x { \exp_not:n {#2} #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{Co-ordinates}	
%
% The most basic way of giving points is as simple $(x,y)$ points.
%
% \begin{macro}[EXP]{\draw_point:nn}
%   Simply turn the given values into dimensions.
%    \begin{macrocode}
\cs_new:Npn \draw_point:nn #1#2
  {
    { \fp_to_dim:n {#1} }
    { \fp_to_dim:n {#2} }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{Vector support}
%
% As well as co-ordinates relative to the drawing 
%
% \begin{variable}
%   {
%     \l_@@_xvec_x_dim,
%     \l_@@_xvec_y_dim,
%     \l_@@_yvec_x_dim,
%     \l_@@_yvec_y_dim,
%     \l_@@_zvec_x_dim,
%     \l_@@_zvec_y_dim
%   }
%   Base vectors to map to the underlying two-dimensional drawing space.
%    \begin{macrocode}
\dim_new:N \l_@@_xvec_x_dim
\dim_new:N \l_@@_xvec_y_dim
\dim_new:N \l_@@_yvec_x_dim
\dim_new:N \l_@@_yvec_y_dim
\dim_new:N \l_@@_zvec_x_dim
\dim_new:N \l_@@_zvec_y_dim
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\draw_set_xvec:n, \draw_set_yvec:n, \draw_set_zvec:n}
% \begin{macro}{\@@_set_vec:nn}
% \begin{macro}{\@@_set_vec:nnn}
%   Calculate the underlying position and store it.
%    \begin{macrocode}
\cs_new_protected:Npn \draw_set_xvec:n #1
  { \@@_set_vec:nn { x } {#1} }
\cs_new_protected:Npn \draw_set_yvec:n #1
  { \@@_set_vec:nn { y } {#1} }
\cs_new_protected:Npn \draw_set_zvec:n #1
  { \@@_set_vec:nn { y } {#1} }
\cs_new_protected:Npn \@@_set_vec:nn #1#2
  {
    \@@_process_point:nn {#2} { \@@_set_vec:nnn {#1} }
  }
\cs_new_protected:Npn \@@_set_vec:nnn #1#2#3
  {
    \dim_set:cn { l_@@_ #1 vec_x_dim } {#2}
    \dim_set:cn { l_@@_ #1 vec_y_dim } {#3}
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% Initialise the vectors.
%    \begin{macrocode}
\draw_set_xvec:n { \draw_point:nn { 1cm } { 0cm } }
\draw_set_yvec:n { \draw_point:nn { 0cm } { 1cm } }
\draw_set_zvec:n { \draw_point:nn { -0.385cm } { -0.385cm } }
%    \end{macrocode}
%
% \begin{macro}[EXP]{\draw_point_vec:nn}
% \begin{macro}[EXP]{\@@_point_vec:nn, \@@_point_vec:ff}
% \begin{macro}[EXP]{\draw_point_vec:nnn}
% \begin{macro}[EXP]{\@@_point_vec:nnn, \@@_point_vec:fff}
%   Force a single evaluation of each factor, then use these to work out the
%   underlying point.
%    \begin{macrocode}
\cs_new:Npn \draw_point_vec:nn #1#2
  { \@@_point_vec:ff { \fp_eval:n {#1} } { \fp_eval:n {#2} } }
\cs_new:Npn \@@_point_vec:nn #1#2
  {
    {
      \fp_to_dim:n
        { #1 * \l_@@_xvec_x_dim + #2 * \l_@@_yvec_x_dim }
    }
    {
      \fp_to_dim:n
        { #1 * \l_@@_xvec_y_dim + #2 * \l_@@_yvec_y_dim }
    }
  }
\cs_generate_variant:Nn \@@_point_vec:nn { ff }
\cs_new:Npn \draw_point_vec:nnn #1#2#3
  {
    \@@_point_vec:fff
      { \fp_eval:n {#1} } { \fp_eval:n {#2} } { \fp_eval:n {#3} }
  }
\cs_new:Npn \@@_point_vec:nnn #1#2#3
  {
    {
      \fp_to_dim:n
        { 
            #1 * \l_@@_xvec_x_dim
          + #2 * \l_@@_yvec_x_dim
          + #3 * \l_@@_zvec_x_dim
        }
    }
    {
      \fp_to_dim:n
        {
            #1 * \l_@@_xvec_y_dim
          + #2 * \l_@@_yvec_y_dim
          + #3 * \l_@@_zvec_y_dim
        }
    }
  }
\cs_generate_variant:Nn \@@_point_vec:nnn { fff }
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%    \begin{macrocode}
%</initex|package>
%    \end{macrocode}
%
% \end{implementation}
%
% \PrintIndex
