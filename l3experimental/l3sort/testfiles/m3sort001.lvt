%
% Copyright (C) 2011 LaTeX3 Project
%
\documentclass{minimal}
\input{regression-test}
\RequirePackage{expl3,l3sort}

\begin{document}

\START
\AUTHOR{Bruno Le Floch}
\ExplSyntaxOn

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Sort~tl}{
  \tl_clear:N \l_tmpa_tl
  \tl_sort:Nn \l_tmpa_tl { \ERROR }
  \TYPE { | \l_tmpa_tl | }
  \tl_set:Nn \l_tmpa_tl { {a\par b} }
  \tl_sort:Nn \l_tmpa_tl { \ERROR }
  \TYPE { \l_tmpa_tl }
  \tl_set:Nn \l_tmpa_tl { 8234610203748 }
  {
    \tl_sort:Nn \l_tmpa_tl
      { \int_compare:nTF { #1 > #2 } \sort_reversed: \sort_ordered: }
    \TYPE { \l_tmpa_tl }
  }
  \TYPE { \l_tmpa_tl }
  \tl_gset:Nx \g_tmpa_tl { \prg_replicate:nn { 10 } { 8234610203748 } }
  {
    \tl_gsort:Nn \g_tmpa_tl
      { \int_compare:nTF { #1 > #2 } \sort_reversed: \sort_ordered: }
  }
  \TYPE { \g_tmpa_tl }
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Sort~clist}{
  \clist_clear:N \l_tmpa_clist
  \clist_sort:Nn \l_tmpa_clist { \ERROR }
  \TYPE { | \l_tmpa_clist | }
  \clist_set:Nn \l_tmpa_clist { { a,~ } }
  \clist_sort:Nn \l_tmpa_clist { \ERROR }
  \TYPE { \l_tmpa_clist }
  \clist_set:Nn \l_tmpa_clist { 8,23,4,61,02,--3,03,7,3,48, }
  {
    \clist_sort:Nn \l_tmpa_clist
      { \int_compare:nTF { #1 > #2 } \sort_reversed: \sort_ordered: }
    \TYPE { \l_tmpa_clist }
  }
  \TYPE { \l_tmpa_clist }
  \clist_gset:Nx \g_tmpa_clist
    { \prg_replicate:nn { 10 } { 8,23,4,61,02,--3,03,7,3,48, } }
  {
    \clist_gsort:Nn \g_tmpa_clist
      { \int_compare:nTF { #1 > #2 } \sort_reversed: \sort_ordered: }
  }
  \TYPE { \g_tmpa_clist }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\TEST{Sort~seq}{
  \seq_clear:N \l_tmpa_seq
  \seq_sort:Nn \l_tmpa_seq { \ERROR }
  \TYPE { | \tl_to_str:N \l_tmpa_seq | }
  {
    \seq_put_right:Nn \l_tmpa_seq { a,~ }
    \seq_sort:Nn \l_tmpa_seq { \ERROR }
    \TYPE { \tl_to_str:N \l_tmpa_seq }
  }
  \TYPE { | \tl_to_str:N \l_tmpa_seq | }
  \seq_gset_split:Nnn \g_tmpa_seq { , } { 8,23,4,61,02,--3,03,7,3,48 }
  {
    \seq_gsort:Nn \g_tmpa_seq
      { \int_compare:nTF { #1 > #2 } \sort_reversed: \sort_ordered: }
  }
  \TYPE { \tl_to_str:N \g_tmpa_seq }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\OMIT
\tl_set:Nx \l_tmpa_tl
  { \prg_replicate:nn { 10000 } { V W X Y Z } }
\clist_set:Nx \l_tmpa_clist
  { \prg_replicate:nn { 10000 } { V , W , X , Y , Z , } }
\cs_generate_variant:Nn \seq_set_split:Nnn { Nno }
\seq_set_split:Nno \l_tmpa_seq { } \l_tmpa_tl

% Normalize what toks are available:
\newtoks \l_test_toks
\int_while_do:nn
  {
    \exp_after:wN \use_none:nnnnn
    \token_to_meaning:N \l_test_toks
    < 300
  }
  { \use:c { newtoks } \l_test_toks }
\int_const:Nn \l_test_expected_count_int
  { \c_max_register_int * 3 / 4 - 300 }
\TIMO


\TEST { sort~too~long }
  {
    \tl_sort:Nn \l_tmpa_tl { \sort_ordered: }
    \int_compare:nF
      { \tl_count:N \l_tmpa_tl = \l_test_expected_count_int }
      { \ERROR }
    \OMIT
    \use:c { newtoks } \l_test_toks
    \TIMO
    \clist_sort:Nn \l_tmpa_clist { \sort_ordered: }
    \int_compare:nF
      { \clist_count:N \l_tmpa_clist = \l_test_expected_count_int - 1 }
      { \ERROR }
    \OMIT
    \use:c { newtoks } \l_test_toks
    \TIMO
    \seq_sort:Nn \l_tmpa_seq { \sort_ordered: }
    \int_compare:nF
      { \seq_count:N \l_tmpa_seq = \l_test_expected_count_int - 2 }
      { \ERROR }
  }

\END
